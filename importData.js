const mongoose = require("mongoose");
const Product = require("./models/Product");
const fs = require("fs");
require("dotenv").config();


const importData = async () => {
    try {
        const data = JSON.parse(fs.readFileSync("jewelry.json", "utf-8"));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç JSON
        const items = data.items || data.articles || data;
        if (!Array.isArray(items)) throw new Error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON");

        // –û—á–∏—â–∞–µ–º –±–∞–∑—É –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º
        await Product.deleteMany();
        console.log("üóë –°—Ç–∞—Ä–∞—è –±–∞–∑–∞ –æ—á–∏—â–µ–Ω–∞");

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ —Ü–µ–Ω—ã
        const filteredItems = items.filter(item => item.price !== undefined && item.price !== null);

        // –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
        if (filteredItems.length === 0) {
            throw new Error("‚ùå –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–æ–π. –ü—Ä–æ–≤–µ—Ä—å JSON.");
        }

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –±–∞–∑—É
        await Product.insertMany(filteredItems);
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${filteredItems.length} —Ç–æ–≤–∞—Ä–æ–≤!`);

        mongoose.connection.close();
    } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:", err);
        mongoose.connection.close();
    }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
importData();
